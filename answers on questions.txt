	Вопросы:
	1. Назовите основные этапы процесса разработки программного обеспечения.
	2. Назовите основные модели процесса разработки программного обеспечения. Дайте им краткую характеристику.

	Ответы:
	1) -Составление с заказчиком технического задания(анализ);
	   -Разбитие технического задание на части и определение задач команде (можно назвать этот этап организационное проектирование);
	   -Разработка програмного обеспечение;
	   -Тестирование програмного обеспечения;
           -Поддержка програмного обеспечения (после релиза);
	
	2)  Основные модели разработки ПЗ :
		- каскадная модель (либо ее еще называют "водопад");
		- V-образна модель;
		- инкрементная модель;
		- спиральная модель;
		- «Agile Model» (гибкая методология разработки);
		- «Scrum»(скрам методология).
	
	Короткое резюме по моделям.
	
		Каскадная модель.
	Легко управлять проектом, разработка и реализация програмного обеспечения проходит быстро и в установленные сроки, так как они заранее определены.
Позволяет добится хороших результатов только в проектах с четко поставленой задачей и оговореным вариантом реализации, так как имеет линейную структуру. 
Ефективна для применения в небольших проектах. К минусам можно отнести ее линейную структуру, так как после разработки начинается етап тестирования и 
линейная структура не прудусматривает возвращение на этап назад.

		V-образна модель.
	Имеет приемущества каскадной модели и лишена недостатков линейной системы(каскадной модели), так как етапы тестирование и разработки могут проводится
паралельно (одновременно). Подойдет для малых и средних проектов. Из минусов необходимо большое количество привлеченного персонала для выполнения паралельно
идущих стадий разработки, а соответственно разработка ПЗ по данной модели будет стоить дороже. Так же по этой модели срок выпуска програмного продукта будет
больший. У этой модели разработки от заказчика так же необходимое четкое ТЗ.
		
		Инкрементная модель.
	Дорогая в реализации модель разработки програмного обеспечения, так как подразумевает разработку одновременно нескольких версий(веток) продукта.
Соответственно отсюда выплывает необходимость занятости большого количества людей которые будут разрабатывать паралельно несколько версий ПЗ, а это аргумент
большой цены разработки по данной модели, а так же более поздние сроки релиза ПЗ. Так же вероятно большая часть версий так и не выйдет в релиз. Для заказчика
в плане реализации его пожеланий это отличная модель разработки. Возможный плюс разработки большого количества версий ПЗ может вылится в разработку ПЗ с одной 
основой но разным целевым назначением, так как основа проекта одна, но возможности в применении различны. Данаая модель может подойти для реализации больших
проектов с большим бюджетом.
		
		Спиральная модель.
	Разработка ПЗ происходит по спирали и каждый этап (виток) это прототип минимально готового ПЗ. При разработке по такой модели у заказчика быстро появляется
прототип с которым можно работать. Нет необходимости в большой команде разработчиков для разработки ПЗ так как не разрабатывается большое количество версий одновременно.
Плюсом данной модели есть гибкость - возможность подстраиваться под постоянно меняющиеся требования, новый функционал может быть внедрен в новой версии ПЗ. 
К минусам можно отнести то, что при постоянных изменений от заказчика модель(спираль) сильно разширяется.

		«Agile Model».
	Предсусматривает совокупность разных типов и разных подходов разработки. Большая вовлеченость заказчика в реализацию проекта, что влечет за собой как + так -.
Методология основана на постоянным общении с заказчиком. А это как выше было упомянуто можеть быть "-" так, как очень большую часть времени потратится на утверждение ТЗ,
либо каких либо деталей. Соответствтвено разработка будет дороже, и дольше. Но и вовлеченность заказчика можно расмотреть как плюс, так как на этапе релиза заказчик получит
ПЗ в котором реализованы все его "хотелки". Методологию используют не для больших проектов.
	
		«Scrum»(скрам методология).
	Вариация гибкой модели разработки (команда внутри команды). Лидер среди методологий. Разработка ПО происходит модульно и тестирование модуля происходит на каждом этапе как и 
согласование с заказчиком, в результате завершения этапа получается "совершенный" модуль. К минусу можно отнести наличие в команде незаменимого сотрудника (главного инженера  проекта, 
либо лидера команды) без которого может быть провален спринт. Из минусов заказчику не всегда понятно зачем усложнять структуру разработки проекта (фининсовые вложение в разработку).